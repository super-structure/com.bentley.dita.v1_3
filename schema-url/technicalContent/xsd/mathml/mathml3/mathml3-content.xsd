<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:mml="http://www.w3.org/1998/Math/MathML"
           elementFormDefault="qualified"
           targetNamespace="http://www.w3.org/1998/Math/MathML">
   <xs:include schemaLocation="mathml3-strict-content.xsd"/>
   <xs:complexType name="cn.content" mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
         <xs:element ref="mml:mglyph"/>
         <xs:element ref="mml:sep"/>
         <xs:element ref="mml:PresentationExpression"/>
      </xs:choice>
   </xs:complexType>
   <xs:attributeGroup name="cn.attributes">
      <xs:attributeGroup ref="mml:CommonAtt"/>
      <xs:attributeGroup ref="mml:DefEncAtt"/>
      <xs:attribute name="type"/>
      <xs:attribute name="base"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="ci.attributes">
      <xs:attributeGroup ref="mml:CommonAtt"/>
      <xs:attributeGroup ref="mml:DefEncAtt"/>
      <xs:attribute name="type"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="ci.type">
      <xs:attribute name="type" use="required"/>
   </xs:attributeGroup>
   <xs:complexType name="ci.content" mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
         <xs:element ref="mml:mglyph"/>
         <xs:element ref="mml:PresentationExpression"/>
      </xs:choice>
   </xs:complexType>
   <xs:attributeGroup name="csymbol.attributes">
      <xs:attributeGroup ref="mml:CommonAtt"/>
      <xs:attributeGroup ref="mml:DefEncAtt"/>
      <xs:attribute name="type"/>
      <xs:attribute name="cd" type="xs:NCName"/>
   </xs:attributeGroup>
   <xs:complexType name="csymbol.content" mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
         <xs:element ref="mml:mglyph"/>
         <xs:element ref="mml:PresentationExpression"/>
      </xs:choice>
   </xs:complexType>
   <xs:element name="bvar">
      <xs:complexType>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:choice>
               <xs:element ref="mml:ci"/>
               <xs:group ref="mml:semantics-ci"/>
            </xs:choice>
            <xs:element ref="mml:degree"/>
         </xs:choice>
      </xs:complexType>
   </xs:element>
   <xs:attributeGroup name="cbytes.attributes">
      <xs:attributeGroup ref="mml:CommonAtt"/>
      <xs:attributeGroup ref="mml:DefEncAtt"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="cs.attributes">
      <xs:attributeGroup ref="mml:CommonAtt"/>
      <xs:attributeGroup ref="mml:DefEncAtt"/>
   </xs:attributeGroup>
   <!--Ambiguous content model altered (apply.content)-->
<xs:complexType name="apply.content">
      <xs:sequence>
         <xs:group ref="mml:ContExp"/>
         <xs:group ref="mml:BvarQ"/>
         <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:Qualifier"/>
         <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:ContExp"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bind.content">
      <xs:complexContent>
         <xs:extension base="mml:apply.content"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:attributeGroup name="base">
      <xs:attribute name="base" use="required"/>
   </xs:attributeGroup>
   <xs:element name="sep">
      <xs:complexType/>
   </xs:element>
   <xs:element name="PresentationExpression" abstract="true"/>
   <xs:group name="DomainQ">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="mml:domainofapplication"/>
            <xs:element ref="mml:condition"/>
            <!--Ambiguous content model altered (interval)--><xs:sequence>
               <xs:element ref="mml:lowlimit"/>
               <xs:element minOccurs="0" ref="mml:uplimit"/>
            </xs:sequence>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:element name="domainofapplication">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="condition">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="uplimit">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="lowlimit">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:group name="Qualifier">
      <xs:choice>
         <xs:group ref="mml:DomainQ"/>
         <xs:element ref="mml:degree"/>
         <xs:element ref="mml:momentabout"/>
         <xs:element ref="mml:logbase"/>
      </xs:choice>
   </xs:group>
   <xs:element name="degree">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="momentabout">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="logbase">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:attributeGroup name="type">
      <xs:attribute name="type" use="required"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="order">
      <xs:attribute name="order" use="required">
         <xs:simpleType>
            <xs:restriction base="xs:token">
               <xs:enumeration value="numeric"/>
               <xs:enumeration value="lexicographic"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
   </xs:attributeGroup>
   <xs:attributeGroup name="closure">
      <xs:attribute name="closure" use="required"/>
   </xs:attributeGroup>
   <xs:element name="piecewise">
      <xs:complexType>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="mml:piece"/>
            <xs:element ref="mml:otherwise"/>
         </xs:choice>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="piece">
      <xs:complexType>
         <xs:sequence>
            <xs:group ref="mml:ContExp"/>
            <xs:group ref="mml:ContExp"/>
         </xs:sequence>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="otherwise">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="DeprecatedContExp" abstract="true"/>
   <xs:element name="reln" substitutionGroup="mml:DeprecatedContExp">
      <xs:complexType>
         <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="fn" substitutionGroup="mml:DeprecatedContExp">
      <xs:complexType>
         <xs:group ref="mml:ContExp"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="declare" substitutionGroup="mml:DeprecatedContExp">
      <xs:complexType>
         <xs:group maxOccurs="unbounded" ref="mml:ContExp"/>
         <xs:attribute name="type" type="xs:string"/>
         <xs:attribute name="scope" type="xs:string"/>
         <xs:attribute name="nargs" type="xs:nonNegativeInteger"/>
         <xs:attribute name="occurrence">
            <xs:simpleType>
               <xs:restriction base="xs:token">
                  <xs:enumeration value="prefix"/>
                  <xs:enumeration value="infix"/>
                  <xs:enumeration value="function-model"/>
               </xs:restriction>
            </xs:simpleType>
         </xs:attribute>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="interval.class" abstract="true">
      <xs:complexType>
         <xs:sequence>
            <xs:group ref="mml:ContExp"/>
            <xs:group ref="mml:ContExp"/>
         </xs:sequence>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
         <xs:attribute name="closure"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="interval" substitutionGroup="mml:interval.class"/>
   <xs:element name="unary-functional.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="inverse" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="ident" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="domain" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="codomain" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="image" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="ln" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="log" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="moment" substitutionGroup="mml:unary-functional.class"/>
   <xs:element name="lambda.class" abstract="true">
      <xs:complexType>
         <xs:sequence>
            <xs:group ref="mml:BvarQ"/>
            <xs:group ref="mml:DomainQ"/>
            <xs:group ref="mml:ContExp"/>
         </xs:sequence>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="lambda" substitutionGroup="mml:lambda.class"/>
   <xs:element name="nary-functional.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="compose" substitutionGroup="mml:nary-functional.class"/>
   <xs:group name="binary-arith.class">
      <xs:choice>
         <xs:element ref="mml:quotient"/>
         <xs:element ref="mml:divide"/>
         <xs:element ref="mml:minus"/>
         <xs:element ref="mml:power"/>
         <xs:element ref="mml:rem"/>
         <xs:element ref="mml:root"/>
      </xs:choice>
   </xs:group>
   <xs:element name="quotient">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="divide">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="minus">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="power">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="rem">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="root">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:group name="unary-arith.class">
      <xs:choice>
         <xs:element ref="mml:factorial"/>
         <!--Ambiguous content model altered (minus)--><!--Ambiguous content model altered (root)--><xs:element ref="mml:abs"/>
         <xs:element ref="mml:conjugate"/>
         <xs:element ref="mml:arg"/>
         <xs:element ref="mml:real"/>
         <xs:element ref="mml:imaginary"/>
         <xs:element ref="mml:floor"/>
         <xs:element ref="mml:ceiling"/>
         <xs:element ref="mml:exp"/>
      </xs:choice>
   </xs:group>
   <xs:element name="factorial">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="abs">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="conjugate">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="arg">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="real">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="imaginary">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="floor">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="ceiling">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="exp">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="nary-minmax.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="max" substitutionGroup="mml:nary-minmax.class"/>
   <xs:element name="min" substitutionGroup="mml:nary-minmax.class"/>
   <xs:element name="nary-arith.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="plus" substitutionGroup="mml:nary-arith.class"/>
   <xs:element name="times" substitutionGroup="mml:nary-arith.class"/>
   <xs:element name="gcd" substitutionGroup="mml:nary-arith.class"/>
   <xs:element name="lcm" substitutionGroup="mml:nary-arith.class"/>
   <xs:element name="nary-logical.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="and" substitutionGroup="mml:nary-logical.class"/>
   <xs:element name="or" substitutionGroup="mml:nary-logical.class"/>
   <xs:element name="xor" substitutionGroup="mml:nary-logical.class"/>
   <xs:element name="unary-logical.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="not" substitutionGroup="mml:unary-logical.class"/>
   <xs:element name="binary-logical.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="implies" substitutionGroup="mml:binary-logical.class"/>
   <xs:element name="equivalent" substitutionGroup="mml:binary-logical.class"/>
   <xs:element name="quantifier.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="forall" substitutionGroup="mml:quantifier.class"/>
   <xs:element name="exists" substitutionGroup="mml:quantifier.class"/>
   <xs:element name="nary-reln.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="eq" substitutionGroup="mml:nary-reln.class"/>
   <xs:element name="gt" substitutionGroup="mml:nary-reln.class"/>
   <xs:element name="lt" substitutionGroup="mml:nary-reln.class"/>
   <xs:element name="geq" substitutionGroup="mml:nary-reln.class"/>
   <xs:element name="leq" substitutionGroup="mml:nary-reln.class"/>
   <xs:element name="binary-reln.class" abstract="true"/>
   <xs:element name="neq" substitutionGroup="mml:binary-reln.class">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="approx" substitutionGroup="mml:binary-reln.class">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="factorof" substitutionGroup="mml:binary-reln.class">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="tendsto" substitutionGroup="mml:binary-reln.class">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
         <xs:attribute name="type"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="int.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="int" substitutionGroup="mml:int.class"/>
   <xs:element name="Differential-Operator.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="diff" substitutionGroup="mml:Differential-Operator.class"/>
   <xs:element name="partialdiff.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="partialdiff" substitutionGroup="mml:partialdiff.class"/>
   <xs:element name="unary-veccalc.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="divergence" substitutionGroup="mml:unary-veccalc.class"/>
   <xs:element name="grad" substitutionGroup="mml:unary-veccalc.class"/>
   <xs:element name="curl" substitutionGroup="mml:unary-veccalc.class"/>
   <xs:element name="laplacian" substitutionGroup="mml:unary-veccalc.class"/>
   <xs:element name="nary-setlist-constructor.class" abstract="true"/>
   <xs:element name="set" substitutionGroup="mml:nary-setlist-constructor.class">
      <xs:complexType>
         <xs:sequence>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:BvarQ"/>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:DomainQ"/>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:ContExp"/>
         </xs:sequence>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
         <xs:attribute name="type"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="list" substitutionGroup="mml:nary-setlist-constructor.class">
      <xs:complexType>
         <xs:sequence>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:BvarQ"/>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:DomainQ"/>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:ContExp"/>
         </xs:sequence>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
         <xs:attribute name="order">
            <xs:simpleType>
               <xs:restriction base="xs:token">
                  <xs:enumeration value="numeric"/>
                  <xs:enumeration value="lexicographic"/>
               </xs:restriction>
            </xs:simpleType>
         </xs:attribute>
      </xs:complexType>
   </xs:element>
   <xs:element name="nary-set.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="union" substitutionGroup="mml:nary-set.class"/>
   <xs:element name="intersect" substitutionGroup="mml:nary-set.class"/>
   <xs:element name="cartesianproduct" substitutionGroup="mml:nary-set.class"/>
   <xs:element name="binary-set.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="in" substitutionGroup="mml:binary-set.class"/>
   <xs:element name="notin" substitutionGroup="mml:binary-set.class"/>
   <xs:element name="notsubset" substitutionGroup="mml:binary-set.class"/>
   <xs:element name="notprsubset" substitutionGroup="mml:binary-set.class"/>
   <xs:element name="setdiff" substitutionGroup="mml:binary-set.class"/>
   <xs:element name="nary-set-reln.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="subset" substitutionGroup="mml:nary-set-reln.class"/>
   <xs:element name="prsubset" substitutionGroup="mml:nary-set-reln.class"/>
   <xs:element name="unary-set.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="card" substitutionGroup="mml:unary-set.class"/>
   <xs:element name="sum.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="sum" substitutionGroup="mml:sum.class"/>
   <xs:element name="product.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="product" substitutionGroup="mml:product.class"/>
   <xs:element name="limit.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="limit" substitutionGroup="mml:limit.class"/>
   <xs:element name="unary-elementary.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="sin" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="cos" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="tan" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="sec" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="csc" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="cot" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="sinh" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="cosh" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="tanh" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="sech" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="csch" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="coth" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arcsin" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arccos" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arctan" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arccosh" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arccot" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arccoth" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arccsc" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arccsch" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arcsec" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arcsech" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arcsinh" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="arctanh" substitutionGroup="mml:unary-elementary.class"/>
   <xs:element name="nary-stats.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="mean" substitutionGroup="mml:nary-stats.class"/>
   <xs:element name="sdev" substitutionGroup="mml:nary-stats.class"/>
   <xs:element name="variance" substitutionGroup="mml:nary-stats.class"/>
   <xs:element name="median" substitutionGroup="mml:nary-stats.class"/>
   <xs:element name="mode" substitutionGroup="mml:nary-stats.class"/>
   <xs:element name="nary-constructor.class" abstract="true">
      <xs:complexType>
         <xs:sequence>
            <xs:group ref="mml:BvarQ"/>
            <xs:group ref="mml:DomainQ"/>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="mml:ContExp"/>
         </xs:sequence>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="vector" substitutionGroup="mml:nary-constructor.class"/>
   <xs:element name="matrix" substitutionGroup="mml:nary-constructor.class"/>
   <xs:element name="matrixrow" substitutionGroup="mml:nary-constructor.class"/>
   <xs:element name="unary-linalg.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="determinant" substitutionGroup="mml:unary-linalg.class"/>
   <xs:element name="transpose" substitutionGroup="mml:unary-linalg.class"/>
   <xs:element name="nary-linalg.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="selector" substitutionGroup="mml:nary-linalg.class"/>
   <xs:element name="binary-linalg.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="vectorproduct" substitutionGroup="mml:binary-linalg.class"/>
   <xs:element name="scalarproduct" substitutionGroup="mml:binary-linalg.class"/>
   <xs:element name="outerproduct" substitutionGroup="mml:binary-linalg.class"/>
   <xs:element name="constant-set.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="integers" substitutionGroup="mml:constant-set.class"/>
   <xs:element name="reals" substitutionGroup="mml:constant-set.class"/>
   <xs:element name="rationals" substitutionGroup="mml:constant-set.class"/>
   <xs:element name="naturalnumbers" substitutionGroup="mml:constant-set.class"/>
   <xs:element name="complexes" substitutionGroup="mml:constant-set.class"/>
   <xs:element name="primes" substitutionGroup="mml:constant-set.class"/>
   <xs:element name="emptyset" substitutionGroup="mml:constant-set.class"/>
   <xs:element name="constant-arith.class" abstract="true">
      <xs:complexType>
         <xs:attributeGroup ref="mml:CommonAtt"/>
         <xs:attributeGroup ref="mml:DefEncAtt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="exponentiale" substitutionGroup="mml:constant-arith.class"/>
   <xs:element name="imaginaryi" substitutionGroup="mml:constant-arith.class"/>
   <xs:element name="notanumber" substitutionGroup="mml:constant-arith.class"/>
   <xs:element name="true" substitutionGroup="mml:constant-arith.class"/>
   <xs:element name="false" substitutionGroup="mml:constant-arith.class"/>
   <xs:element name="pi" substitutionGroup="mml:constant-arith.class"/>
   <xs:element name="eulergamma" substitutionGroup="mml:constant-arith.class"/>
   <xs:element name="infinity" substitutionGroup="mml:constant-arith.class"/>
</xs:schema>